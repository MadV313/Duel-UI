/* Background Styling */
body {
  margin: 0;
  padding: 0;
  background: url('../images/backgrounds/background_image.PNG') no-repeat center center fixed;
  background-size: cover;
  background-color: #000;
  font-family: Arial, sans-serif;
  overflow: hidden;
}

/* Snowfall GIF Overlay */
.snowfall {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: url('../images/effects/snowfall.gif') center center / cover no-repeat;
  pointer-events: none;
  z-index: 2;
  opacity: 0.5;
}

/* General Animation Layer */
.animation {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 999;
}

/* Attack Animation (Melee) */
.animation.attack {
  background: rgba(255, 0, 0, 0.3);
  animation: pulse 1s ease-out;
}

/* Gunfire Animation (Bullet) */
.animation.bullet {
  background: rgba(255, 255, 0, 0.2);
  animation: flash 0.6s ease-in-out;
}

/* Heal Animation */
.animation.heal {
  background: rgba(0, 255, 0, 0.3);
  animation: pulse 1s ease-out;
}

/* Fire Animation */
.animation.fire {
  background: rgba(255, 69, 0, 0.3);
  animation: shake 1s ease-in-out;
}

/* Explosion Animation */
.animation.explosion {
  background: rgba(255, 165, 0, 0.5);
  animation: flash 1s ease-out;
}

/* Poison Animation */
.animation.poison {
  background: rgba(0, 255, 0, 0.2);
  animation: poisonPulse 1s ease-in-out;
}

/* Shield/Defense Animation */
.animation.shield {
  background: rgba(135, 206, 250, 0.2);
  animation: fadeShield 1.2s ease-in-out;
}

/* Trap Activation Animation */
.animation.trap {
  background: rgba(128, 0, 128, 0.3);
  animation: shake 1.2s ease-in-out;
}

/* Combo Trigger Animation */
.animation.combo {
  background: rgba(255, 215, 0, 0.4);
  animation: flash 1.4s ease-in-out;
}

/* Animation Keyframes */
@keyframes pulse {
  0% { opacity: 0; }
  50% { opacity: 1; }
  100% { opacity: 0; }
}

@keyframes shake {
  0% { transform: translate(0px, 0px); }
  25% { transform: translate(5px, -5px); }
  50% { transform: translate(-5px, 5px); }
  75% { transform: translate(5px, 5px); }
  100% { transform: translate(0px, 0px); }
}

@keyframes flash {
  0% { opacity: 0; }
  30% { opacity: 1; }
  60% { opacity: 1; }
  100% { opacity: 0; }
}

@keyframes poisonPulse {
  0% { filter: hue-rotate(0deg); opacity: 0.5; }
  50% { filter: hue-rotate(90deg); opacity: 1; }
  100% { filter: hue-rotate(0deg); opacity: 0.5; }
}

@keyframes fadeShield {
  0% { opacity: 0; }
  50% { opacity: 0.7; }
  100% { opacity: 0; }
}

/* Card UI */
.card {
  display: inline-block;
  margin: 6px;
  text-align: center;
  position: relative;
  width: 100px;
}

.card-image {
  width: 100px;
  height: auto;
  border-radius: 4px;
}

.card-name {
  font-size: 12px;
  margin-top: 4px;
  color: #fff;
}

/* Face-Down Trap Styling */
.card.face-down {
  /* was grayscale + 0.85 opacity — make backs crisp & full color */
  filter: none;
  opacity: 1;
  border: 2px solid #555;
}

/* Optional Type-based Borders */
.card.attack { border: 2px solid red; }
.card.defense { border: 2px solid blue; }
.card.trap { border: 2px dashed purple; }

/* Combo & Damage Glow Effects */
.card.damage-glow {
  animation: damagePulse 1s ease-in-out;
  box-shadow: 0 0 15px red;
}

.card.combo-glow {
  animation: comboPulse 1s ease-in-out;
  box-shadow: 0 0 15px gold;
}

@keyframes damagePulse {
  0% { box-shadow: 0 0 0 red; }
  50% { box-shadow: 0 0 20px red; }
  100% { box-shadow: 0 0 0 red; }
}

@keyframes comboPulse {
  0% { box-shadow: 0 0 0 gold; }
  50% { box-shadow: 0 0 20px gold; }
  100% { box-shadow: 0 0 0 gold; }
}

/* Coin Flip Overlay + Animation */
.coin-flip-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: 1.5rem;
  color: #00ffff;
  background: rgba(0, 0, 0, 0.8);
  padding: 20px;
  border: 2px solid #00ffff;
  border-radius: 12px;
  animation: fadeIn 0.3s ease-out;
}

/* Ensure the coin flip root container is centered & above all */
#coinFlipContainer {
  position: fixed;
  inset: 0;
  display: none;                 /* JS will toggle this */
  align-items: center;
  justify-content: center;
  z-index: 1100;                 /* above .overlay and animations */
}

.coin-flip-image {
  width: 100px;
  height: 100px;
  margin-bottom: 12px;
  animation: spin 1.2s linear infinite;
}

.coin-flip-result {
  text-align: center;
  font-weight: bold;
}

@keyframes spin {
  0% { transform: rotateY(0deg); }
  100% { transform: rotateY(360deg); }
}

@keyframes fadeIn {
  from { opacity: 0; transform: scale(0.95); }
  to   { opacity: 1; transform: scale(1); }
}

/* Mock Mode Support */
body.mock-mode #duel-ui {
  display: block !important;
}

#mock-controls {
  position: absolute;
  top: 10px;
  right: 10px;
  z-index: 1001;
  background: rgba(0, 0, 0, 0.65);
  border: 1px solid #00ffff;
  border-radius: 8px;
  padding: 10px;
  color: #00ffff;
  font-family: Arial, sans-serif;
  font-size: 0.9rem;
}

/* Classic Duel Layout & Buttons */
#hp-display {
  display: flex;
  justify-content: space-between;
  padding: 12px 80px;       /* moved text away from edges */
  color: #f0f0f0;
  font-size: 2.2rem;        /* roughly double of 1.1rem */
  font-weight: bold;
}

#turn-display {
  text-align: center;
  color: #f0f0f0;
  font-size: 1rem;
  margin-bottom: 8px;
}

#player1-field, #player2-field {
  display: grid !important;
  /* 3-slot layout */
  grid-template-columns: repeat(3, 100px);
  grid-auto-rows: 1fr;
  gap: 12px;
  justify-content: center;
  align-content: start;
  margin: 8px auto 16px auto;
  max-width: 360px;  /* 3*100 + 2*12 gaps */
  min-height: 140px; /* keep the row visible even when empty */
  position: relative; /* for ghost & discard bays */
}

/* Ghost slot placeholders (3 dashed boxes) */
#player1-field::before,
#player2-field::before {
  content: "";
  position: absolute;
  top: 0;
  left: 50%;
  width: 100px;
  height: 140px;
  border: 2px dashed rgba(255,255,255,0.25);
  border-radius: 6px;
  transform: translateX(-50%);
  pointer-events: none;
  z-index: 0;
  /* left & right clones */
  box-shadow:
    -112px 0 0 0 rgba(255,255,255,0.25),
     112px 0 0 0 rgba(255,255,255,0.25);
}

/* Hands: center 3 cards, reserve space for deck */
#player1-hand, #player2-hand {
  display: flex !important;
  justify-content: center;
  align-items: center;
  gap: 12px;
  margin-bottom: 16px;
  min-height: 160px; /* visual stability */
  position: relative; /* anchor deck pseudo-elements */
  max-width: 480px;
  margin-left: auto;
  margin-right: auto;
}

/* reserve deck space so it never overlaps or drifts */
#player1-hand { padding-right: 120px; }  /* deck on RIGHT */
#player2-hand { padding-left: 120px; }   /* deck on LEFT  */

/* Deck placeholders: now ABSOLUTE (won’t get pushed by draws) */
#player1-hand::after,
#player2-hand::before {
  content: "";
  position: absolute;
  top: 10px;
  width: 100px;
  height: 140px;
  background: url('../images/cards/000_CardBack_Unique.png') center / cover no-repeat;
  border-radius: 6px;
  /* full-color, crisp */
  filter: none;
  opacity: 1;
  box-shadow: 0 0 6px rgba(0,0,0,0.6);
  border: 2px solid rgba(255,255,255,0.15);
  pointer-events: none;
  z-index: 1;
}

#player1-hand::after {  right: 0; } /* player deck at RIGHT */
#player2-hand::before { left:  0; } /* opponent deck at LEFT */

/* Control bar */
#controls {
  display: flex !important;
  justify-content: center;
  flex-wrap: wrap;
  gap: 16px;
  margin: 20px auto;
  max-width: 600px;
}

#controls button {
  background-color: #facc15;
  border: none;
  padding: 10px 16px;
  font-weight: bold;
  border-radius: 6px;
  cursor: pointer;
  color: #000;
  font-size: 0.95rem;
  box-shadow: 0 0 6px #fff2;
  transition: transform 0.2s ease;
}

#controls button:hover {
  transform: scale(1.05);
  box-shadow: 0 0 10px #facc15;
}

#health-bars {
  display: flex;
  justify-content: space-between;
  padding: 0 80px;
  gap: 40px;
  margin-top: -10px;
  margin-bottom: 20px;
}

.health-bar-container {
  flex: 1;
  height: 20px;
  background-color: rgba(255, 255, 255, 0.15);
  border: 2px solid #444;
  border-radius: 10px;
  overflow: hidden;
}

.health-bar {
  height: 100%;
  width: 100%; /* This will shrink via JS */
  background: linear-gradient(to right, limegreen, gold);
  transition: width 0.3s ease;
}

/* Announcement / coin-flip text helper */
.overlay {
  position: fixed;
  top: 12%;
  left: 50%;
  transform: translateX(-50%);
  padding: 12px 18px;
  background: rgba(0,0,0,0.75);
  color: #00ffff;
  border: 2px solid #00ffff;
  border-radius: 10px;
  font-weight: bold;
  z-index: 1000;
}
.hidden { display: none; }

/* --- Helpers added (non-breaking) --- */
.card.clickable { cursor: pointer; }
.card.spectator { pointer-events: none; opacity: 0.8; }

/* Optional placeholder (used only if you enable it in JS) */
.card.slot-placeholder {
  width: 100px;
  height: 140px;
  border: 2px dashed #777;
  border-radius: 6px;
  opacity: 0.2;
}

/* =========================
   DUEL-READY GATING (new)
   ========================= */

/* Hide hands/fields + draw/end buttons until the app marks the page duel-ready */
body:not(.duel-ready) #player1-hand,
body:not(.duel-ready) #player2-hand,
body:not(.duel-ready) #player1-field,
body:not(.duel-ready) #player2-field,
body:not(.duel-ready) #drawBtn,
body:not(.duel-ready) #endTurnBtn {
  display: none !important;
}

/* Once ready, reveal zones/buttons (these restore your intended layouts) */
body.duel-ready #player1-hand,
body.duel-ready #player2-hand {
  display: flex !important;
}
body.duel-ready #player1-field,
body.duel-ready #player2-field {
  display: grid !important;
}
body.duel-ready #drawBtn,
body.duel-ready #endTurnBtn {
  display: inline-block !important;
}

/* After start, lock the control bar to bottom center (draw/end only) */
body.duel-ready #controls {
  position: fixed;
  left: 50%;
  transform: translateX(-50%);
  bottom: max(56px, env(safe-area-inset-bottom)); /* keep above Return-to-Hub */
  margin: 0;
  z-index: 9000;
  background: transparent;
}

/* Optionally auto-hide the Start button after we're ready (JS also hides it) */
body.duel-ready #startPracticeBtn {
  display: none !important;
}

/* --- Return-to-Hub: harden styles + placement (override) --- */
a.return-to-hub,
a.return-to-hub:link,
a.return-to-hub:visited {
  position: fixed !important;
  bottom: max(20px, env(safe-area-inset-bottom)) !important;
  right:  max(20px, env(safe-area-inset-right))  !important;
  display: inline-block !important;
  background-color: rgba(0, 128, 128, 0.9) !important; /* teal */
  color: #fff !important;
  padding: 12px 20px !important;
  font-size: 16px !important;
  font-weight: bold !important;
  border-radius: 8px !important;
  border: 2px solid #fff !important;
  text-decoration: none !important;
  cursor: pointer !important;
  z-index: 10000 !important; /* above overlays/animations */
  box-shadow: 0 0 10px rgba(0, 255, 255, 0.15) !important;
}

a.return-to-hub:hover {
  background-color: rgba(0, 200, 200, 1) !important;
  transform: scale(1.05) !important;
  box-shadow: 0 0 10px #00ffff !important;
}

/* ------- Card action picker & highlights ------- */
.card.hovering { outline: 2px solid rgba(255, 255, 255, 0.35); outline-offset: 2px; }
.card.selected { box-shadow: 0 0 16px rgba(250, 204, 21, 0.9); }

.card-action-menu {
  position: absolute;
  transform: translate(-50%, -100%);
  background: rgba(0,0,0,0.85);
  border: 2px solid #00ffff;
  border-radius: 10px;
  padding: 6px;
  z-index: 10050;
  display: flex;
  gap: 6px;
  box-shadow: 0 0 10px rgba(0,255,255,0.25);
}
.card-action-menu.hidden { display: none; }
.card-action-menu button {
  background: #facc15;
  color: #000;
  border: none;
  border-radius: 6px;
  padding: 6px 10px;
  font-weight: bold;
  cursor: pointer;
}
.card-action-menu button:hover { transform: translateY(-1px); }

/* ========================================
   Discard Bay (per-field) — NEW
   ======================================== */

.discard-bay {
  position: absolute;
  top: 0;
  width: 100px;
  height: 140px;
  border: 2px dashed rgba(255,255,255,0.25);
  border-radius: 6px;
  background: rgba(0,0,0,0.25);
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;          /* visual only */
  z-index: 2;
}

/* Place the bay just outside the 3 slots */
#player1-field .discard-bay { right: -120px; }
#player2-field .discard-bay { left:  -120px; }

/* Title above the bay */
.discard-title {
  position: absolute;
  top: -18px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 12px;
  color: #ddd;
  text-shadow: 0 1px 2px #000;
  pointer-events: none;
}

/* Card-back stack inside the bay */
.discard-pile {
  position: relative;
  width: 100px;
  height: 140px;
}

.discard-pile .card-back {
  position: absolute;
  inset: 0;
  width: 100px;
  height: 140px;
  background: url('../images/cards/000_CardBack_Unique.png') center / cover no-repeat;
  border-radius: 6px;
  box-shadow: 0 0 6px rgba(0,0,0,0.6);
  border: 2px solid rgba(255,255,255,0.15);
  filter: none;
  opacity: 1;
}

/* Offset a few backs for a stacked look */
.discard-pile .card-back:nth-child(2) { transform: translate(4px, 4px); }
.discard-pile .card-back:nth-child(3) { transform: translate(8px, 8px); }

/* Count badge (bottom-right of the bay) */
.discard-count {
  position: absolute;
  right: 6px;
  bottom: 6px;
  min-width: 22px;
  height: 22px;
  padding: 0 6px;
  border-radius: 11px;
  background: rgba(0,0,0,0.7);
  color: #00ffff;
  font-weight: bold;
  font-size: 12px;
  line-height: 22px;
  text-align: center;
  box-shadow: 0 0 6px rgba(0,255,255,0.2);
  pointer-events: none;
}
